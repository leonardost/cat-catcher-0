pico-8 cartridge // http://www.pico-8.com
version 18
__lua__
--[[
  cat catcher 0 v0.0.1 - (c) lst 2019
  ===================================

  cat catcher 0 is the prequel
  to cat catcher. it's a simple
  game where our girl protagonist
  has to catch stray cats that
  are running rampant around the
  city and causing mischief.
  
  try to not let any cat escape!
  when they come close to you,
  press ❎ to capture them.
  be careful with the big ones,
  though! they are harder to
  catch.
--]]

function _init()
  graphics = {}
  updatables = {}
  t = 0

  cat = cat_actor(108, 64)
  bigcat = bigcat_actor(128, 80)
  girl = girl_actor(32, 56)
  add(graphics, cat)
  add(graphics, bigcat)
  add(graphics, girl)
  add(updatables, cat)
  add(updatables, bigcat)
  add(updatables, girl)
  
  local girl1 = sprite(2, 2, { 20, 21, 36, 37 })
  local girl2 = sprite(2, 2, { 22, 23, 38, 39 })
  local girl3 = sprite(2, 2, { 24, 25, 40, 41 })  
  animation_idle = animation()
  animation_idle.add_frame(girl1, 30)
  animation_idle.add_frame(girl2, 2)
  animation_idle.add_frame(girl3, 5)
  animation_idle.add_frame(girl2, 2)
  add(updatables, animation_idle)
  
  local girl4 = sprite(2, 2, { 26, 27, 42, 43 })
  local girl5 = sprite(2, 2, { 28, 29, 44, 45 })    
  animation_yawn = animation()
  animation_yawn.add_frame(girl1, 30)
  animation_yawn.add_frame(girl2, 5)
  animation_yawn.add_frame(girl3, 20)
  animation_yawn.add_frame(girl4, 13)
  animation_yawn.add_frame(girl5, 40)  
  animation_yawn.add_frame(girl4, 13)
  animation_yawn.add_frame(girl3, 20)  
  animation_yawn.add_frame(girl2, 5)
  add(updatables, animation_yawn)
  
  elevator = elevator_actor(0, 32)
  add(graphics, elevator)
  add(updatables, elevator)
end

function _update()
  t += 1

  for obj in all(updatables) do
    obj.update()
  end

  if t == 30 then
    elevator.move_to_floor(0)
  end
  
  if btn(⬅️) then
    girl.walk(-2)
  end
  if btn(➡️) then
    girl.walk(2)
  end
  -- stops walking
  if girl.is_walking() and not btn(⬅️) and not btn(➡️) then
    girl.idle()
  end
end

function _draw()
  cls()
  for gfx in all(graphics) do
    gfx.draw()
  end
  animation_idle.draw(0, 0)
  animation_yawn.draw(32, 0)
  
end
-->8
function sprite(w, h, sprites)
  local w = w
  local h = h
  local sprites = sprites
  local self = {}

  function self.draw(x, y)
    for i = 0, h - 1 do
	     for j = 0, w - 1 do
	       spr(
  	       sprites[i * w + j + 1],
  	       x + j * 8,
  	       y + i * 8
  	     )
  	   end
  	 end
  end

  return self
end

-->8
function animation()
  local sprites = {}
  local durations = {}
  local number_of_sprites = 0
  local current_frame = 1
  local ticks = 0
  local finished_callback = nil

  local self = {}
  function self.add_frame(sprite, duration)
    add(sprites, sprite)
    add(durations, duration)
    number_of_sprites += 1
  end
  function self.set_finished_callback(callback)
    finished_callback = callback
  end
  function self.start()
    ticks = 0
    current_frame = 1
  end
  function self.update()
    ticks += 1
    if ticks >= durations[current_frame] then
      current_frame += 1
      if current_frame > number_of_sprites then
        current_frame = 1
        if finished_callback != nil then
          finished_callback()
        end
      end
      ticks = 0
    end
  end
	 function self.draw(x, y)
	   sprites[current_frame].draw(x, y)
	 end

  return self
end

-->8
function girl_actor(x, y)
  local t = 0
  local idle_t = 0

  local girl1 = sprite(2, 2, { 20, 21, 36, 37 })
  local animation_idle = animation()
  animation_idle.add_frame(girl1, 30)
  local idle_state = state(
    "idle",
    animation_idle
  )

  local girl2 = sprite(2, 2, { 22, 23, 38, 39 })
  local girl3 = sprite(2, 2, { 24, 25, 40, 41 })
  local animation_blink = animation()
  animation_blink.add_frame(girl2, 2)
  animation_blink.add_frame(girl3, 5)
  animation_blink.add_frame(girl2, 2)
  local blink_state = state(
    "blink",
    animation_blink
  )

  local girl4 = sprite(2, 2, { 26, 27, 42, 43 })
  local girl5 = sprite(2, 2, { 28, 29, 44, 45 })
  animation_yawn = animation()
  animation_yawn.add_frame(girl2, 5)
  animation_yawn.add_frame(girl3, 20)
  animation_yawn.add_frame(girl4, 13)
  animation_yawn.add_frame(girl5, 40)
  animation_yawn.add_frame(girl4, 13)
  animation_yawn.add_frame(girl3, 20)
  animation_yawn.add_frame(girl2, 5)
  local yawn_state = state(
    "yawn",
    animation_yawn
  )
  
  local girl6 = sprite(2, 2, { 30, 31, 46, 47 })
  animation_walk = animation()
  animation_walk.add_frame(girl6, 5)
  animation_walk.add_frame(girl1, 5)
  local walk_state = state(
    "walk",
    animation_walk
  )
  
  local girl = actor(x, y, {
    idle_state,
    blink_state,
    yawn_state,
    walk_state
  })
  
  girl.update = function()
    t += 1
    if girl.is_idle() then
      idle_t += 1
    else
      idle_t = 0
    end
    
    -- idle
		  if girl.current_state == 1 then
     	if t % 10 == 0 and flr(rnd(100)) > 70 then
     	  girl.change_to_state(2)
      elseif idle_t > 300 then
        girl.change_to_state(3)
        idle_t = 0
      end
    end

    girl.update_state()
  end
  
  function girl.walk(distance)
    girl.x += distance
    girl.change_to_state(4)
  end

  function girl.idle()
    girl.change_to_state(1)
  end

  function girl.is_walking()
  	 return girl.current_state == 4
  end

  function girl.is_idle()
    return girl.current_state >= 1 and girl.current_state <= 3
  end

  blink_state.set_finished_callback(girl.idle)
  yawn_state.set_finished_callback(girl.idle)
  
  return girl
end

-->8
function actor(x, y, states)
  local states = states
  local self = {
    x = x,
    y = y,
    current_state = 1
  }

  function self.change_to_state(new_state)
    self.current_state = new_state
    states[self.current_state].start()
  end
  function self.get_current_state()
    return states[self.current_state].name
  end
  -- remember to call this in
  -- the actor's update() method 
  function self.update_state()
    states[self.current_state].update()
  end
  function self.draw()
    states[self.current_state].draw(self.x, self.y)
  end

  return self
end

-->8
function state(name, animation)
  local self = {
    name = name,
    animation = animation
  }

  function self.set_finished_callback(callback)
    animation.set_finished_callback(callback)
  end
  function self.start()
    animation.start()
  end
  function self.update()
    animation.update()
  end
  function self.draw(x, y)
    animation.draw(x, y)
  end

  return self
end

-->8
function cat_actor(x, y)
  local cat1 = sprite(1, 1, { 1 })
  local cat2 = sprite(1, 1, { 2 })
  local animation = animation()
  animation.add_frame(cat1, 8)
  animation.add_frame(cat2, 8)
  local walking = state(
  	 "walking",
  	 animation
  )
  local cat = actor(x, y, { walking })
  
  cat.update = function()
    cat.update_state()
    cat.x -= 2
    if cat.x < -8 then
      cat.x = 128
    end
  end
  
  return cat
end

function bigcat_actor(x, y)
  local cat1 = sprite(2, 2, { 16, 17, 32, 33 })
  local cat2 = sprite(2, 2, { 18, 19, 34, 35 })
  local animation = animation()
  animation.add_frame(cat1, 8)
  animation.add_frame(cat2, 8)
  local walking = state(
  	 "walking",
  	 animation
  )

  local bigcat = actor(x, y, { walking })

  bigcat.update = function()
    bigcat.update_state()
    bigcat.x -= 1
    if bigcat.x < -16 then
      bigcat.x = 128
    end
  end
  
  return bigcat
end

-->8
function elevator_actor(x, y)
	 local x = x
	 local y = y
	 local t = 0
	 local state = 0
	 --[[
	   states:
	   0 = open, still
	   1 = closing
	   2 = moving between floors
	   3 = opening
	 --]]
	 local gap_width = 7
	 local current_floor = 0
	 local destination_floor = 0
	 local self = {}

  function self.draw()
    rect(x, y, x + 15, y + 15, 5)
    if state != 0 then
      rectfill(x + 1, y + 1, x + 14, y + 14, 6)
		    local left_gap = x + 7 - gap_width
		    local right_gap = x + 8 + gap_width
		    line(left_gap, y + 1, left_gap, y + 14, 13)
		    line(right_gap, y + 1, right_gap, y + 14, 7)
		    if gap_width > 0 then
		      rectfill(left_gap + 1, y + 1, right_gap - 1, y + 14, 0)
		    end
		  end
		  print("elevator state = " .. state, 0, 96)
		  print("destination y = " .. 16 + destination_floor * 32, 0, 104)
		  print("elevator y = " .. y, 0, 112)
		  print("gap_width = " .. gap_width, 0, 120)
  end

  function self.update()
    t += 1

    if state == 1 then
      gap_width -= 1
      if gap_width == 0 then
        state = 2
      end
    elseif state == 2 then
      if y < 48 + destination_floor * 32 then
        y += 2
      elseif y > 48 + destination_floor * 32 then
        y -= 2
      else
        state = 3
      end
    elseif state == 3 then
      gap_width += 1
      if gap_width == 7 then
        state = 0
      end
    end
  end

  function self.move_to_floor(floor)
    state = 1
    destination_floor = floor
  end

	 return self
end

__gfx__
00000000500500555005000544444444000000000000000099999999044444403333333311111111000000000000000000000000000000000000000000000000
00000000555500055555000544b4b4440000000000000000aaaaaaaa44999944b3b3b3a3cccccccc000000000000000000000000000000000000000000000000
00700700a55a0005a55a0005bbbbbbb4000000000000ccc0aaaaaaaa49499494bbbbbbbbccc7c7cc000000000000000000000000000000000000000000000000
000770005555555555555555bbbbbbb400770770000ccc0caaaaaaaa49944994abbbbbbbcccccc77000000000000000000000000000000000000000000000000
000770005555555555555555b3bb3bb40700000000cccc77aaaaaaaa49944994bbbbabbb77cccccc000000000000000000000000000000000000000000000000
007007005005050550500505bbbbbbb407077707ccc77770aaaaaaaa49499494bbbbbbbacccccccc000000000000000000000000000000000000000000000000
000000005005050550550555b3bb3bbb007777700c000000aaaaaaaa44999944bbabbbbbcccc7cc7000000000000000000000000000000000000000000000000
000000005005050505000005b3333bbb00777770000000009999999904444440bbbbbbbbcccccccc000000000000000000000000000000000000000000000000
50000005000066505000000500000000000002222224440000000222222444000000022222244400000002222224440000000222222444000000022222244400
5500005500006555550000550000665500002222224f244000002222224f244000002222224f244000002222224f244000002222224f244000002222224f2440
5550055500000055555005550000655500022222224ff24400022222224ff24400022222224ff24400022222224ff24400022222224ff24400022222224ff244
555555550000005555555555000000550002222224ffff240002222224ffff240002222224ffff240002222224ffff240002222224ffff240002222224ffff24
555555550000005555555555000000550002222244ffff240002222244ffff240002222244ffff240002222244ffff240002222244ffff240002222244ffff24
5aa55aa5500000555a5555a55000005502c2222447ff07f202c222244ffffff202c222244ffffff202c222244ffffff202c222244ffffff202c2222447ff07f2
5aa55aa5555555555aa55aa55555555522c2244f00ff00f222c2244f07ff07f222c2244ffffffff222c2244ffffffff222c2244ffffffff222c2244f00ff00f2
555e555555555555555e55555555555522c244ff00ff00f222c244ff00ff00f222c244f000ff000222c244f000ff000222c244f000ff000222c244ff00ff00f2
6555556665555555655555666555555522144fff04ff04ff22144fff44ff44ff22144fffffffffff22144fffffffffff22144ff7ffffff7f22144fff04ff04ff
5555555555555555555555555555555522044fff44ff44ff22044fffffffffff22044fffffffffff22044fffffffffff22044ffffeeeefff22044fff44ff44ff
55566555555555555556655555555550240044ffffffffff240044ffffffffff240044ffffffffff240044ffffeeffff240044fffeeeefff240044ffffffffff
556006555555055555600655555505502400044ffffffff02400044ffffffff02400044ffffffff02400044fffeefff02400044ffeeeeff02400044ffffffff0
55000055055000555500005505500555224000fffffff000224000fffffff000224000fffffff000224000fffffff000224000fffffff000224000fffffff000
550000550550005555600055655005552224400bbabb00002224400bbabb00002224400bbabb00002224400bbabb00002224400bbabb00002224400bbabb0000
550000550550005556600055655500550222000bbbbb00000222000bbbbb00000222000bbbbb00000222000bbbbb00000222000bbbbb00000222001bbbbb1000
66000066065000650000000005560066000000010001000000000001000100000000000100010000000000010001000000000001000100000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
55555555555555555555555555555555555555555555555555555555555555550000000000000000000000000000000000000000000000000000000000000000
5666666d76666665566666d00766666556666d00007666655666d000007666650000000000000000000000000000000000000000000000000000000000000000
5666666d76666665566666d00766666556666d00007666655666d000007666650000000000000000000000000000000000000000000000000000000000000000
5666666d76666665566666d00766666556666d00007666655666d000007666650000000000000000000000000000000000000000000000000000000000000000
5666666d76666665566666d00766666556666d00007666655666d000007666650000000000000000000000000000000000000000000000000000000000000000
5666666d76666665566666d00766666556666d00007666655666d000007666650000000000000000000000000000000000000000000000000000000000000000
5666666d76666665566666d00766666556666d00007666655666d000007666650000000000000000000000000000000000000000000000000000000000000000
5666666d76666665566666d00766666556666d00007666655666d000007666650000000000000000000000000000000000000000000000000000000000000000
5666666d76666665566666d00766666556666d000076666556666d00007666650000000000000000000000000000000000000000000000000000000000000000
5666666d76666665566666d00766666556666d000076666556666d00007666650000000000000000000000000000000000000000000000000000000000000000
5666666d76666665566666d00766666556666d000076666556666d00007666650000000000000000000000000000000000000000000000000000000000000000
5666666d76666665566666d00766666556666d000076666556666d00007666650000000000000000000000000000000000000000000000000000000000000000
5666666d76666665566666d00766666556666d000076666556666d00007666650000000000000000000000000000000000000000000000000000000000000000
5666666d76666665566666d00766666556666d000076666556666d00007666650000000000000000000000000000000000000000000000000000000000000000
5666666d76666665566666d00766666556666d000076666556666d00007666650000000000000000000000000000000000000000000000000000000000000000
55555555555555555555555555555555555555555555555555555555555555550000000000000000000000000000000000000000000000000000000000000000
55555550000000050000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
56000065000000050000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
50600605000000050000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
50067005000000050000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
50066005000000050000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
50600605000000050000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
56000065000000050000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
05555555000000050000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
50000000555555500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
50000000560000650000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
50000000506006050000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
50000000500670050000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
50000000500660050000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
50000000506006050000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
50000000560000650000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
50000000055555550000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0606060606060606060606060606060600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0606060606060606060606060606060600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0606060606060606060606060606060600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0606060606060606060606060606060600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__sfx__
00010000000002d0502f050310503105033050340503505036050370503705037050380503805038050370503505033050300502d0502a0502705024050210501e0501b050180501605014050120501105010050
011e00000c550105500c550105500c550105500c550105500b550105500b550105500b550105500b550105500c550105500c550105500c550105500c55010550135501755013550175500e550115500e55011550
011000002d250092500000009250000000d2500f2500000000000000000000000000000000000000000000002d250092500000009250000000d2500f250000000000000000000000000000000000000000000000
011000001f1501a050001001a0501f0501a05000100000000000000000000001f1501a0501f1501a050001001a0501f0501a05000100001000010000100001001f1501a0501f1501a050001001a0501f0501a050
01100000247502475024750247502875028750287502875026750267502675026750297502975029750297502b7502b7502b7502b750297502975029750297502875028750287502875024750247502475024750
011000001335010350003000030000300003000030000300003000030000300003000030000300003000030000300003000030000300003000030000300003000030000300003000030000300003000030000300
0002000035550365503755038550395503b5503c5503e5503f5503f5503f5503f5503f5503f5503e5503d5503c5503a5503855037550355503355025500005000050000500005000050000500005000050000500
010f00000c550000000c5500c5500c550075500c5500e550000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__music__
00 04034344

